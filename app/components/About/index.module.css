.tabs {
    display: flex;
    min-height: 24rem;
    @media (width <=991px) {
        flex-direction: column;
    }
}

.tab {
    width: 100%;
    height: 55px;
    background: var(--primary-color);
    transition: .5s ease-in-out all;
    position: relative;
    backface-visibility: visible;
    margin: 0 -1px; /* Compensate width parent border */
    @media (width > 991px) {
        width: unset;
        height: 100px;
        aspect-ratio: 1/cos(30deg);
        clip-path: polygon(50% -50%, 100% 50%, 50% 150%, 0 50%);
        margin: 0 -10px -40px 0;
    }

    @media (width > 991px) {
        &::after {
            content: "";
            background-color: var(--primary-bg-dark);
            opacity: .5;
            display: block;
            position: absolute;
            top: 0;
            --b: 5px;
            height: 100px;
            aspect-ratio: 1/cos(30deg);
            clip-path: polygon(0 50%, 50% -50%, 100% 50%, 50% 150%, 0 50%,
            var(--b) 50%,
            calc(25% + var(--b) * cos(60deg)) calc(100% - var(--b) * sin(60deg)),
            calc(75% - var(--b) * cos(60deg)) calc(100% - var(--b) * sin(60deg)),
            calc(100% - var(--b)) 50%,
            calc(75% - var(--b) * cos(60deg)) calc(var(--b) * sin(60deg)),
            calc(25% + var(--b) * cos(60deg)) calc(var(--b) * sin(60deg)),
            var(--b) 50%);
            transition: .5s ease-in-out all;
        }
    }

    @media (width <= 991px) {
        &::after {
            content: '\f41b';
            font-family: var(--icon-font);
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            color: var(--primary-color);
            font-size: 2rem;
            z-index: -1;
            transition: transform .5s ease-in-out;
        }
        &:nth-child(2)::after {
            content: "\f3d3";
        }
        &:nth-child(3)::after {
            content: "\f17c";
        }
        &:nth-child(4)::after {
            content: "\f7bb";
        }
    }

    @media (width <= 576px) {
        font-size: 0.9rem;
    }

    &:hover {
        transition: .5s ease-in-out all;

        &::after {
            --b: 0px;
            transition: .5s ease-in-out all;
        }
    }

    &:global.active {
        @media (width <= 991px) {
            transform: translateY(50%);
            &::after {
                transform: translateY(-30px);
            }
        }
        @media (width > 991px ) {
            transform: scale(1.19);
            transition: .5s ease-in-out transform;
        }
    }

    &:nth-child(2) {
        grid-column-start: 2;
        grid-row-start: 2;
    }

    &:nth-child(3) {
        grid-row-start: 3;
    }

    &:nth-child(4) {
        grid-column-start: 2;
        grid-row-start: 4;
    }
}

.tabText {
    overflow: hidden;
    position: relative;
    @media (width >= 1400px) {
        min-height: 190px;
    }
    @media (width >= 1200px) {
        min-height: 215px;
    }
    @media (width >= 991px) {
        min-height: 260px;
    }

    &::after {
        content: attr(data-icon);
        font-family: var(--icon-font);
        color: var(--primary-color);
        position: absolute;
        right: 0;
        bottom: 0;
        font-size: 10rem;
        transform: translate(20%, 30%);
        z-index: 1;
        opacity: .35;
    }
}

.panel {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: repeat(4, 1fr);
    gap: 0;
    height: fit-content;
    margin: 3rem 0 0 0;
    @media screen and (width <=991px) {
        display: flex;
        justify-content: space-between;
        margin: 0 0 4rem 0;
        border: 1px solid var(--primary-color);
    }
}

.content {
    width: 100%;

    @media screen and (width > 991px) {
        margin: 0 0 0 3rem;
    }
}

/* Animation */
.titleAnimated {
    animation: titleIn .5s ease-out;
}

.textAnimated {
    position: relative;
    animation: textIn .5s ease-out;
    z-index: 2;
}

.tabText::after {
    animation: iconIn .5s ease-out;
}

@keyframes titleIn {
    from {
        opacity: 0;
        transform: translateX(-25%);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes textIn {
    from {
        opacity: 0;
        transform: translateX(-20%);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes iconIn {
    from {
        transform: translate(20%, 30%) rotate(-180deg) scale(0);
    }
    to {
        transform: translate(20%, 30%) rotate(0) scale(01);
    }
}
